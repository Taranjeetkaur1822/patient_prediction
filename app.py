# -*- coding: utf-8 -*-
"""APP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sQ7MVr-61jaWiZOJwiOi5e_BZUCn_I9j
"""

import streamlit as st
import numpy as np
import joblib

# Load the trained model and scaler
model = joblib.load("logistic_regression.pkl")
scaler = joblib.load("scaler.pkl")

# Ensure the input feature order matches the trained scaler
feature_names = ["chest_pain","exercise_angina","diabetes","hypertension", 
                 "heart_disease","residence_type", 
                 "smoking_status" "bp", "cholesterol", "max_hr"
                  ]
# Title
st.title("üè• Medical Risk Prediction App")
st.write("This app predicts whether a patient is at risk based on medical data.")

# Sidebar for user input
st.sidebar.header("Enter Patient Details")

# Define input fields
age = st.sidebar.slider("Age", 1, 100, 30)
gender = st.sidebar.selectbox("Gender", ["Male", "Female"])
chest_pain = st.sidebar.selectbox("Chest Pain Type", [1, 2, 3, 4])
bp = st.sidebar.number_input("Blood Pressure", 80, 200, 120)
cholesterol = st.sidebar.number_input("Cholesterol Level", 100, 400, 200)
max_hr = st.sidebar.number_input("Max Heart Rate", 60, 220, 150)
exercise_angina = st.sidebar.selectbox("Exercise-Induced Angina", ["No", "Yes"])
plasma_glucose = st.sidebar.number_input("Plasma Glucose Level", 50, 300, 120)
skin_thickness = st.sidebar.number_input("Skin Thickness", 1, 50, 20)
insulin = st.sidebar.number_input("Insulin Level", 10, 300, 100)
bmi = st.sidebar.number_input("BMI", 10.0, 50.0, 25.0)
diabetes = st.sidebar.selectbox("Diabetes", ["No", "Yes"])
hypertension = st.sidebar.selectbox("Hypertension", ["No", "Yes"])
heart_disease = st.sidebar.selectbox("Heart Disease", ["No", "Yes"])
residence_type = st.sidebar.selectbox("Residence Type", ["Urban", "Rural"])
smoking_status = st.sidebar.selectbox("Smoking Status", ["Never", "Former", "Current"])

# Convert categorical inputs to numerical values
gender = 1 if gender == "Male" else 0
exercise_angina = 1 if exercise_angina == "Yes" else 0
diabetes = 1 if diabetes == "Yes" else 0
hypertension = 1 if hypertension == "Yes" else 0
heart_disease = 1 if heart_disease == "Yes" else 0
residence_type = 1 if residence_type == "Urban" else 0
smoking_status = {"Never": 0, "Former": 1, "Current": 2}[smoking_status]

# Collect user input as a NumPy array
user_input = np.array([[chest_pain, exercise_angina, diabetes, hypertension, 
                        heart_disease, residence_type,
                        smoking_status, bp, cholesterol, max_hr]])

# Scale input features


if user_input.shape[1] == len(feature_names):
    user_input_scaled = scaler.transform(user_input)
    prediction = model.predict(user_input_scaled)[0]
    probability = model.predict_proba(user_input_scaled)[0][1]


    st.subheader("Prediction Result")
    if prediction == 1:
        st.error(f"üö® High Risk! Immediate Attention Needed! (Confidence: {probability:.2f})")
    else:
        st.success(f"‚úÖ Low Risk. No Immediate Danger. (Confidence: {1-probability:.2f})")
else:
    st.error("Feature mismatch! Please check input values.")

